---
apiVersion: v1
kind: ServiceAccount
metadata:
    name: gateway
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-bootstrap
data:
  envoy-bootstrap.yaml: |
    ---
    node:
      id: ingressgateway
      cluster: ingressgateway
      locality:
        region: us-west1
        zone: us-west1-a
      metadata: {}
    admin:
      access_log_path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 15000
    dynamic_resources:
      lds_config:
        ads: {}
      cds_config:
        ads: {}
      ads_config:
        api_type: GRPC
        grpc_services:
          - envoy_grpc:
              cluster_name: xds-grpc
    static_resources:
      clusters:
        - name: jaeger
          type: STRICT_DNS
          connect_timeout: 0.250s
          lb_policy: ROUND_ROBIN
          hosts:
            - socket_address:
                protocol: TCP
                address: jaeger-query
                port_value: 16686
        - name: prometheus_stats
          type: STATIC
          connect_timeout: 0.250s
          lb_policy: ROUND_ROBIN
          hosts:
            - socket_address:
                protocol: TCP
                address: 127.0.0.1
                port_value: 15000
        - name: xds-grpc
          type: STRICT_DNS
          dns_refresh_rate: 300s
          dns_lookup_family: V4_ONLY
          connect_timeout: 10s
          lb_policy: ROUND_ROBIN
          hosts:
            - socket_address:
                address: navigator
                port_value: 8080
          circuit_breakers:
            thresholds:
              - priority: DEFAULT
                max_connections: 100000
                max_pending_requests: 100000
                max_requests: 100000
              - priority: HIGH
                max_connections: 100000
                max_pending_requests: 100000
                max_requests: 100000
          upstream_connection_options:
            tcp_keepalive:
              keepalive_time: 300
          http2_protocol_options: {}
      listeners:
        - address:
            socket_address:
              protocol: TCP
              address: 0.0.0.0
              port_value: 8001
          filter_chains:
            - filters:
                - name: envoy.http_connection_manager
                  config:
                    codec_type: AUTO
                    stat_prefix: stats
                    generate_request_id: true
                    route_config:
                      virtual_hosts:
                        - name: jaeger
                          domains:
                            - "*"
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: jaeger
                    http_filters:
                      name: envoy.router
              tls_context:
                common_tls_context:
                  tls_certificates:
                  - certificate_chain:
                      filename: /etc/certs/ingressgateway-certs/tls.crt
                    private_key:
                      filename: /etc/certs/ingressgateway-certs/tls.key
                  alpn_protocols:
                    - h2
                    - http/1.1
                require_client_certificate: false
        - address:
            socket_address:
              protocol: TCP
              address: 0.0.0.0
              port_value: 15090
          filter_chains:
            - filters:
                - name: envoy.http_connection_manager
                  config:
                    codec_type: AUTO
                    stat_prefix: stats
                    route_config:
                      virtual_hosts:
                        - name: backend
                          domains:
                            - "*"
                          routes:
                            - match:
                                prefix: "/stats/prometheus"
                              route:
                                cluster: prometheus_stats
                    http_filters:
                      name: envoy.router
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gateway
  name: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  strategy: {}
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: gateway
      containers:
      - image: gcr.io/cf-routing-desserts/envoy:latest
        name: gateway
        command:
          - "/usr/local/bin/envoy"
        args:
          - "-c"
          - "/etc/envoy/config/envoy-bootstrap.yaml"
          - "--service-cluster"
          - "ingressgateway"
          - "--restart-epoch"
          - "0"
          - "--drain-time-s"
          - "45"
          - "--parent-shutdown-time-s"
          - "60"
          - "--max-obj-name-len"
          - "189"
          - "--local-address-ip-version"
          - "v4"
          - "--log-format"
          - "[Envoy (Epoch 0)] [%Y-%m-%d %T.%e][%t][%l][%n] %v"
          - "-l"
          - "warning"
          - "--component-log-level"
          - "misc:error"
        resources: {}
        ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 15090
            name: prometheus
            protocol: TCP
          - containerPort: 15000
            name: admin
            protocol: TCP
          - containerPort: 8001
            name: jaeger
            protocol: TCP
        volumeMounts:
          - mountPath: /etc/envoy/config
            name: boostrap-config
          - mountPath: /etc/certs/ingressgateway-certs
            name: ingressgateway-certs
            readOnly: true
      volumes:
        - name: boostrap-config
          configMap:
            name: gateway-bootstrap
        - name: ingressgateway-certs
          secret:
            defaultMode: 420
            secretName: gateway
# mount boostrap config
# (optinal) mount cert/key pair
#
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gateway
  name: gateway
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  - name: admin
    port: 15000
    protocol: TCP
    targetPort: 15000
  - name: jaeger
    port: 8001
    protocol: TCP
    targetPort: 8001
  selector:
    app: gateway
  type: LoadBalancer
