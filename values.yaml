global:
  useMCP: false

gateways:
  istio-ingressgateway:
    # autoscaleEnabled: false
    # replicaCount: 20
    autoscaleMin: 1
    autoscaleMax: 20
    tolerations:
    - key: "scalers.istio"
      operator: "Equal"
      value: "dedicated"
      effect: "NoSchedule"
    nodeSelector:
      scalers.istio: dedicated
    podAntiAffinityTermLabelSelector:
    - key: istio
      operator: In
      values: ingressgateway
      topologyKey: "kubernetes.io/hostname"

pilot:
  # autoscaleEnabled: false
  # replicaCount: 20
  autoscaleMin: 1
  autoscaleMax: 20
  tolerations:
  - key: "scalers.istio"
    operator: "Equal"
    value: "dedicated"
    effect: "NoSchedule"
  nodeSelector:
    scalers.istio: dedicated
  podAntiAffinityTermLabelSelector:
  - key: istio
    operator: In
    values: pilot
    topologyKey: "kubernetes.io/hostname"

# galley:
#   replicaCount: 10
#   tolerations:
#   - key: "scalers.istio"
#     operator: "Equal"
#     value: "dedicated"
#     effect: "NoSchedule"
#   nodeSelector:
#     scalers.istio: dedicated
#   podAntiAffinityTermLabelSelector:
#   - key: istio
#     operator: In
#     values: galley
#     topologyKey: "kubernetes.io/hostname"

prometheus:
  nodeSelector:
    scalers.istio: prometheus
  tolerations:
  - key: "scalers.istio"
    operator: "Equal"
    value: "prometheus"
    effect: "NoSchedule"

mixer:
  policy:
    enabled: false
  telemetry:
    enabled: false

