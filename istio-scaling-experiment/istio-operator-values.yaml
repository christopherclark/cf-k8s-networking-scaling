apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  profile: default
  values:
    global:
      useMCP: false
    gateways:
      istio-ingressgateway:
        autoscaleEnabled: false
    pilot:
      autoscaleEnabled: false
    mixer:
      policy:
        enabled: false
      telemetry:
        enabled: false
    prometheus:
      nodeSelector:
        scalers.istio: prometheus
      tolerations:
      - key: "scalers.istio"
        operator: "Equal"
        value: "prometheus"
        effect: "NoSchedule"
  components:
    ingressGateways:
    - name: ingressgateway
      k8s:
        replicaCount: 20
        tolerations:
        - key: "scalers.istio"
          operator: "Equal"
          value: "dedicated"
          effect: "NoSchedule"
        nodeSelector:
          scalers.istio: dedicated
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels: { "istio": "ingressgateway" }
              topologyKey: "kubernetes.io/hostname"
            - labelSelector:
                matchLabels: { "istio": "pilot" }
              topologyKey: "kubernetes.io/hostname"
    pilot:
      k8s:
        replicaCount: 20
        tolerations:
        - key: "scalers.istio"
          operator: "Equal"
          value: "dedicated"
          effect: "NoSchedule"
        nodeSelector:
          scalers.istio: dedicated
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels: { "istio": "ingressgateway" }
              topologyKey: "kubernetes.io/hostname"
            - labelSelector:
                matchLabels: { "istio": "pilot" }
              topologyKey: "kubernetes.io/hostname"

    sidecarInjector:
      enabled: true
